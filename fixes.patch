diff --git a/fixes.diff b/fixes.diff
new file mode 100644
index 0000000..b6c9f31
--- /dev/null
+++ b/fixes.diff
@@ -0,0 +1,136 @@
+--- a/.github/workflows/ci-cd.yml
++++ b/.github/workflows/ci-cd.yml
+@@
++name: CI
++
++on:
++  push:
++    branches: [ main, master ]
++  pull_request:
++
++jobs:
++  lint-and-test:
++    name: Lint & Test
++    runs-on: ubuntu-latest
++    steps:
++      - name: Checkout
++        uses: actions/checkout@v4
++
++      - name: Setup Python
++        uses: actions/setup-python@v4
++        with:
++          python-version: '3.11'
++
++      - name: Install yamllint & shellcheck
++        run: |
++          sudo apt-get update -y
++          sudo apt-get install -y yamllint shellcheck
++
++      - name: Run yamllint on workflows
++        run: |
++          if [ -d ".github/workflows" ]; then
++            yamllint .github/workflows || true
++          else
++            echo "No workflows to lint"
++          fi
++
++      - name: Run shellcheck on scripts
++        run: |
++          find . -type f -name "*.sh" -print0 | xargs -0 --no-run-if-empty shellcheck -x || true
++
++      - name: Install Python deps
++        run: |
++          python -m pip install --upgrade pip
++          if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "no requirements.txt"; fi
++
++      - name: Run pytest
++        run: |
++          if [ -d tests ] || [ -f pytest.ini ]; then
++            pytest -q
++          else
++            echo "No tests to run"
++          fi
+--- /dev/null
++++ b/.pre-commit-config.yaml
+@@
++repos:
++- repo: https://github.com/pre-commit/pre-commit-hooks
++  rev: v4.5.0
++  hooks:
++    - id: trailing-whitespace
++    - id: end-of-file-fixer
++    - id: check-yaml
++    - id: check-added-large-files
++
++- repo: https://github.com/pycqa/flake8
++  rev: 6.0.0
++  hooks:
++    - id: flake8
++      additional_dependencies: [flake8]
++
++- repo: https://github.com/koalaman/shellcheck
++  rev: v0.10.0
++  hooks:
++    - id: shellcheck
+--- /dev/null
++++ b/pytest.ini
+@@
++[pytest]
++minversion = 7.0
++addopts = -q --strict-markers
++testpaths = tests
++python_files = test_*.py *_test.py
++filterwarnings = error::DeprecationWarning
+--- /dev/null
++++ b/pytest.ini
+@@
++[pytest]
++minversion = 7.0
++addopts = -q --strict-markers
++testpaths = tests
++python_files = test_*.py *_test.py
++filterwarnings = error::DeprecationWarning
+--- /dev/null
++++ b/run_all.sh
+@@
++#!/usr/bin/env bash
++set -euo pipefail
++IFS=$'\n\t'
++
++ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
++
++# If you have scripts in scripts/ directory, this will run them in alphabetical order.
++if [ -d "$ROOT/scripts" ]; then
++  echo "Found scripts directory: $ROOT/scripts"
++  for s in "$ROOT"/scripts/*.sh; do
++    [ -f "$s" ] || continue
++    echo "--- Running $s ---"
++    bash "$s"
++  done
++else
++  echo "No scripts/ directory found — nothing to run."
++fi
++
++echo "All done."
+--- /dev/null
++++ b/run_all.sh
+@@
++#!/usr/bin/env bash
++set -euo pipefail
++IFS=$'\n\t'
++
++ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
++
++# If you have scripts in scripts/ directory, this will run them in alphabetical order.
++if [ -d "$ROOT/scripts" ]; then
++  echo "Found scripts directory: $ROOT/scripts"
++  for s in "$ROOT"/scripts/*.sh; do
++    [ -f "$s" ] || continue
++    echo "--- Running $s ---"
++    bash "$s"
++  done
++else
++  echo "No scripts/ directory found — nothing to run."
++fi
++
++echo "All done."
diff --git a/fixes.patch b/fixes.patch
new file mode 100644
index 0000000..0288510
--- /dev/null
+++ b/fixes.patch
@@ -0,0 +1,143 @@
+From 5db3c93c7b8b2a61f0c68e4c49b5e83c8895 Mon Sep 17 00:00:00 2001
+From: Jasbir88 <jasbir.88@gmail.com>
+Date: Sat, 20 Sep 2025 12:34:00 +0800
+Subject: [PATCH] chore: add CI, harden shell scripts, pin deps, add pytest &
+ pre-commit
+
+---
+ .github/workflows/ci-cd.yml     | 49 +++++++++++++++++++++++++++++++
+ .pre-commit-config.yaml        | 22 ++++++++++++++
+ pytest.ini                     |  6 ++++
+ requirements.txt               |  3 ++
+ run_all.sh                     | 19 +++++++++++
+ scripts/hardened_header.sh     |  6 ++++
+ 6 files changed, 105 insertions(+)
+ create mode 100644 .github/workflows/ci-cd.yml
+ create mode 100644 .pre-commit-config.yaml
+ create mode 100644 pytest.ini
+ create mode 100644 requirements.txt
+ create mode 100755 run_all.sh
+ create mode 100644 scripts/hardened_header.sh
+
+--- /dev/null
++++ b/.github/workflows/ci-cd.yml
+@@
++name: CI
++
++on:
++  push:
++    branches: [ main, master ]
++  pull_request:
++
++jobs:
++  lint-and-test:
++    name: Lint & Test
++    runs-on: ubuntu-latest
++    steps:
++      - name: Checkout
++        uses: actions/checkout@v4
++
++      - name: Setup Python
++        uses: actions/setup-python@v4
++        with:
++          python-version: '3.11'
++
++      - name: Install yamllint & shellcheck
++        run: |
++          sudo apt-get update -y
++          sudo apt-get install -y yamllint shellcheck
++
++      - name: Run yamllint on workflows
++        run: |
++          if [ -d ".github/workflows" ]; then
++            yamllint .github/workflows || true
++          else
++            echo "No workflows to lint"
++          fi
++
++      - name: Run shellcheck on scripts
++        run: |
++          find . -type f -name "*.sh" -print0 | xargs -0 --no-run-if-empty shellcheck -x || true
++
++      - name: Install Python deps
++        run: |
++          python -m pip install --upgrade pip
++          if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "no requirements.txt"; fi
++
++      - name: Run pytest
++        run: |
++          if [ -d tests ] || [ -f pytest.ini ]; then
++            pytest -q
++          else
++            echo "No tests to run"
++          fi
+--- /dev/null
++++ b/.pre-commit-config.yaml
+@@
++repos:
++- repo: https://github.com/pre-commit/pre-commit-hooks
++  rev: v4.5.0
++  hooks:
++    - id: trailing-whitespace
++    - id: end-of-file-fixer
++    - id: check-yaml
++    - id: check-added-large-files
++
++- repo: https://github.com/pycqa/flake8
++  rev: 6.0.0
++  hooks:
++    - id: flake8
++      additional_dependencies: [flake8]
++
++- repo: https://github.com/koalaman/shellcheck
++  rev: v0.10.0
++  hooks:
++    - id: shellcheck
+--- /dev/null
++++ b/pytest.ini
+@@
++[pytest]
++minversion = 7.0
++addopts = -q --strict-markers
++testpaths = tests
++python_files = test_*.py *_test.py
++filterwarnings = error::DeprecationWarning
+--- /dev/null
++++ b/requirements.txt
+@@
++pytest>=7.0,<8
++requests>=2.31,<3
++pyyaml>=6.0,<7
+--- /dev/null
++++ b/run_all.sh
+@@
++#!/usr/bin/env bash
++set -euo pipefail
++IFS=$'\n\t'
++
++ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
++
++# If you have scripts in scripts/ directory, this will run them in alphabetical order.
++if [ -d "$ROOT/scripts" ]; then
++  echo "Found scripts directory: $ROOT/scripts"
++  for s in "$ROOT"/scripts/*.sh; do
++    [ -f "$s" ] || continue
++    echo "--- Running $s ---"
++    bash "$s"
++  done
++else
++  echo "No scripts/ directory found — nothing to run."
++fi
++
++echo "All done."
+--- /dev/null
++++ b/scripts/hardened_header.sh
+@@
++#!/usr/bin/env bash
++set -euo pipefail
++IFS=$'\n\t'
++
++# Use this header in all your shell scripts. Example usage:
++# put this at top of every .sh and then your script logic below.
+--
+2.39.2
diff --git a/tests/__pycache__/test_auth.cpython-313-pytest-8.3.5.pyc b/tests/__pycache__/test_auth.cpython-313-pytest-8.3.5.pyc
new file mode 100644
index 0000000..04fe2ad
Binary files /dev/null and b/tests/__pycache__/test_auth.cpython-313-pytest-8.3.5.pyc differ
diff --git a/tests/__pycache__/test_hello.cpython-313-pytest-8.3.5.pyc b/tests/__pycache__/test_hello.cpython-313-pytest-8.3.5.pyc
new file mode 100644
index 0000000..d121fcc
Binary files /dev/null and b/tests/__pycache__/test_hello.cpython-313-pytest-8.3.5.pyc differ
