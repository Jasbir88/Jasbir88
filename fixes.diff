--- a/.github/workflows/ci-cd.yml
+++ b/.github/workflows/ci-cd.yml
@@
+name: CI
+
+on:
+  push:
+    branches: [ main, master ]
+  pull_request:
+
+jobs:
+  lint-and-test:
+    name: Lint & Test
+    runs-on: ubuntu-latest
+    steps:
+      - name: Checkout
+        uses: actions/checkout@v4
+
+      - name: Setup Python
+        uses: actions/setup-python@v4
+        with:
+          python-version: '3.11'
+
+      - name: Install yamllint & shellcheck
+        run: |
+          sudo apt-get update -y
+          sudo apt-get install -y yamllint shellcheck
+
+      - name: Run yamllint on workflows
+        run: |
+          if [ -d ".github/workflows" ]; then
+            yamllint .github/workflows || true
+          else
+            echo "No workflows to lint"
+          fi
+
+      - name: Run shellcheck on scripts
+        run: |
+          find . -type f -name "*.sh" -print0 | xargs -0 --no-run-if-empty shellcheck -x || true
+
+      - name: Install Python deps
+        run: |
+          python -m pip install --upgrade pip
+          if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "no requirements.txt"; fi
+
+      - name: Run pytest
+        run: |
+          if [ -d tests ] || [ -f pytest.ini ]; then
+            pytest -q
+          else
+            echo "No tests to run"
+          fi
--- /dev/null
+++ b/.pre-commit-config.yaml
@@
+repos:
+- repo: https://github.com/pre-commit/pre-commit-hooks
+  rev: v4.5.0
+  hooks:
+    - id: trailing-whitespace
+    - id: end-of-file-fixer
+    - id: check-yaml
+    - id: check-added-large-files
+
+- repo: https://github.com/pycqa/flake8
+  rev: 6.0.0
+  hooks:
+    - id: flake8
+      additional_dependencies: [flake8]
+
+- repo: https://github.com/koalaman/shellcheck
+  rev: v0.10.0
+  hooks:
+    - id: shellcheck
--- /dev/null
+++ b/pytest.ini
@@
+[pytest]
+minversion = 7.0
+addopts = -q --strict-markers
+testpaths = tests
+python_files = test_*.py *_test.py
+filterwarnings = error::DeprecationWarning
--- /dev/null
+++ b/pytest.ini
@@
+[pytest]
+minversion = 7.0
+addopts = -q --strict-markers
+testpaths = tests
+python_files = test_*.py *_test.py
+filterwarnings = error::DeprecationWarning
--- /dev/null
+++ b/run_all.sh
@@
+#!/usr/bin/env bash
+set -euo pipefail
+IFS=$'\n\t'
+
+ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
+
+# If you have scripts in scripts/ directory, this will run them in alphabetical order.
+if [ -d "$ROOT/scripts" ]; then
+  echo "Found scripts directory: $ROOT/scripts"
+  for s in "$ROOT"/scripts/*.sh; do
+    [ -f "$s" ] || continue
+    echo "--- Running $s ---"
+    bash "$s"
+  done
+else
+  echo "No scripts/ directory found — nothing to run."
+fi
+
+echo "All done."
--- /dev/null
+++ b/run_all.sh
@@
+#!/usr/bin/env bash
+set -euo pipefail
+IFS=$'\n\t'
+
+ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
+
+# If you have scripts in scripts/ directory, this will run them in alphabetical order.
+if [ -d "$ROOT/scripts" ]; then
+  echo "Found scripts directory: $ROOT/scripts"
+  for s in "$ROOT"/scripts/*.sh; do
+    [ -f "$s" ] || continue
+    echo "--- Running $s ---"
+    bash "$s"
+  done
+else
+  echo "No scripts/ directory found — nothing to run."
+fi
+
+echo "All done."
