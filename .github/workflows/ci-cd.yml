name: CI/CD Pipeline

permissions:
  contents: read
  actions: read
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  lint-and-test:
    name: 🧪 Lint, Validate, and Test
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v2

      # Step 2: Set Up Environment
      - name: ⚙️ Set Up Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck bash python3 python3-pip
          echo "✅ Environment set up successfully."

      # Step 3: Validate Bash Scripts
      - name: 🔍 Lint and Validate Bash Scripts
        run: |
          echo "🔄 Checking all shell scripts for linting errors..."
          find . -type f -name "*.sh" -exec shellcheck {} \;
          echo "✅ All scripts passed ShellCheck."

      # Step 4: Validate Bash Syntax
      - name: Validate Bash Script Syntax
        run: |
          echo "Validating bash script syntax..."
          for script in $(find . -type f -name "*.sh"); do
            bash -n "$script" || { echo "Syntax error in $script"; exit 1; }
          done
          echo "All scripts passed syntax validation."

      # Step 5: Ensure Scripts Are Executable
      - name: Ensure Scripts Are Executable
        run: |
          chmod +x *.sh
          chmod +x ./tests/*.sh || true
          echo "Executable permissions ensured."

      # Step 6: Run Tests
      - name: Run Tests
        run: |
          echo "Running tests..."
          if [[ -f "./tests/test_sample.sh" ]]; then
            bash ./tests/test_sample.sh
          else
            echo "No test script found. Skipping tests."
          fi
          echo "Tests completed."

      # Step 7: Archive Logs (if any)
      - name: 📦 Archive Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: ./run_all.log

      - name: Send Slack Notification on Success
        if: success()
        uses: slackapi/slack-github-action@v1.24.0  # Use a valid version tag
        with:
          payload: |
            {
              "text": "✅ CI/CD Workflow Succeeded: All checks passed and deployment successful. 🎉"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Notification on Failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0  # Use a valid version tag
        with:
          payload: |
            {
              "text": "❌ CI/CD Workflow Failed: Check GitHub Actions for details. 🚨"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deployment:
    name: 🚀 Deployment
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v4

      - name: 🚀 Deploy Application
        run: |
          echo "🔄 Starting deployment..."
          # Add your deployment script here, for example:
          # ./deploy.sh
          echo "✅ Deployment successful."

      - name: ✅ Verify Deployment
        run: |
          echo "🔄 Verifying deployment..."
          # Add verification steps here
          echo "✅ Deployment verified."

  notifications:
    name: Notifications
    runs-on: ubuntu-latest
    if: always()
    needs: [lint-and-test, deployment]

    steps:
      - name: Send Slack Notification on Failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "❌ CI/CD Workflow Failed: Check GitHub Actions for details. 🚨"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      - name: Send Success Notification
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "✅ CI/CD Workflow Succeeded: All checks passed and deployment successful. 🎉"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and Test
        run: |
          echo "Running build and tests..."
          # Add your build and test commands here

      - name: Send Slack Notification on Success
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "✅ CI/CD Workflow Succeeded: All checks passed and deployment successful. 🎉"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Notification on Failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "❌ CI/CD Workflow Failed: Check GitHub Actions for details. 🚨"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
